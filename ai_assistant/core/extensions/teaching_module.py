import webbrowser

def teach(topic):
    """
    T·ª± ƒë·ªông cung c·∫•p th√¥ng tin h·ªçc t·∫≠p cho b·∫•t k·ª≥ ch·ªß ƒë·ªÅ n√†o.
    C√≥ th·ªÉ m·ªü Wikipedia ho·∫∑c t·∫°o n·ªôi dung m√¥ ph·ªèng cho AI gi·∫£ng d·∫°y.
    """
    try:
        print(f"[Teaching Module] ƒêang t·∫°o b√†i h·ªçc cho ch·ªß ƒë·ªÅ: {topic}")
        # Gi·∫£ l·∫≠p AI gi·∫£ng b√†i b·∫±ng n·ªôi dung c·ªë ƒë·ªãnh ho·∫∑c truy c·∫≠p t√†i nguy√™n m·ªü
        response = generate_teaching_content(topic)
        return response
    except Exception as e:
        return f"ƒê√£ x·∫£y ra l·ªói khi gi·∫£ng d·∫°y: {str(e)}"

def generate_teaching_content(topic):
    base_knowledge = {
        "AI": "Tr√≠ tu·ªá nh√¢n t·∫°o l√† ng√†nh nghi√™n c·ª©u gi√∫p m√°y m√≥c h·ªçc h·ªèi v√† ra quy·∫øt ƒë·ªãnh nh∆∞ con ng∆∞·ªùi.",
        "Cybersecurity": "An to√†n m·∫°ng gi√∫p b·∫£o v·ªá d·ªØ li·ªáu v√† h·ªá th·ªëng tr∆∞·ªõc c√°c m·ªëi ƒëe d·ªça s·ªë.",
        "Python": "Python l√† ng√¥n ng·ªØ l·∫≠p tr√¨nh ƒë∆°n gi·∫£n, ph·ªï bi·∫øn trong web, AI v√† khoa h·ªçc d·ªØ li·ªáu.",
    }

    # N·∫øu c√≥ s·∫µn b√†i gi·∫£ng
    if topic in base_knowledge:
        return f"üìò B√†i h·ªçc: {base_knowledge[topic]}"
    else:
        # N·∫øu kh√¥ng c√≥ s·∫µn, m·ªü Wikipedia (c√≥ th·ªÉ thay b·∫±ng API v·ªÅ sau)
        webbrowser.open(f"https://vi.wikipedia.org/wiki/{topic.replace(' ', '_')}")
        return f"Kh√¥ng c√≥ b√†i h·ªçc n·ªôi b·ªô cho '{topic}', ƒëang chuy·ªÉn b·∫°n ƒë·∫øn Wikipedia ƒë·ªÉ h·ªçc th√™m."

